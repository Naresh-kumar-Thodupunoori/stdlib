/**
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var bench = require( '@stdlib/bench' );
var isArray = require( '@stdlib/assert/is-array' );
var isBoolean = require( '@stdlib/assert/is-boolean' ).isPrimitive;
var pkg = require( './../package.json' ).name;
var cunoneBy = require( './../lib' );


// FUNCTIONS //

function predicate( v ) {
    return v === false;
}


// MAIN //

bench( pkg, function benchmark( b ) {
    var x;
    var i;
    var v;

    x = [ false, false, true, false, false ];

    b.tic();
    for ( i = 0; i < b.iterations; i++ ) {
        v = cunoneBy( x, predicate );
        if ( typeof v !== 'object' ) {
            b.fail( 'should return an array' );
        }
    }
    b.toc();
    if ( !isArray( v ) ) {
        b.fail( 'should return an array' );
    }
    b.pass( 'benchmark finished' );
    b.end();
});

bench( pkg+':assign', function benchmark( b ) {
    var out;
    var x;
    var y;
    var i;

    x = [ false, false, true, false, false ];
    out = [ 0, 0, 0, 0, 0 ];

    b.tic();
    for ( i = 0; i < b.iterations; i++ ) {
        y = cunoneBy.assign( x, out, 1, 0, predicate );
        if ( typeof y !== 'object' ) {
            b.fail( 'should return an array' );
        }
    }
    b.toc();
    if ( !isArray( y ) || y !== out ) {
        b.fail( 'should return the output array' );
    }
    for ( i = 0; i < y.length; i++ ) {
        if ( !isBoolean( y[i] ) ) {
            b.fail( 'should only contain boolean values' );
        }
    }
    b.pass( 'benchmark finished' );
    b.end();
});